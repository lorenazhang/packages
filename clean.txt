def smallest_distance(text, word1, word2):
    # Split the text into words
    words = text.split()
    
    # Initialize variables to track positions and the smallest distance
    last_pos_word1 = -1
    last_pos_word2 = -1
    min_distance = float('inf')
    
    # Iterate through the list of words
    for i, word in enumerate(words):
        if word == word1:
            last_pos_word1 = i
            # Calculate distance if word2 has already been seen
            if last_pos_word2 != -1:
                min_distance = min(min_distance, abs(last_pos_word1 - last_pos_word2))
        
        if word == word2:
            last_pos_word2 = i
            # Calculate distance if word1 has already been seen
            if last_pos_word1 != -1:
                min_distance = min(min_distance, abs(last_pos_word2 - last_pos_word1))
    
    # If min_distance was updated, return it; otherwise, return -1 indicating words were not found
    return min_distance if min_distance != float('inf') else -1

# Example usage
text = "The quick brown fox jumps over the lazy dog. The quick brown fox is very quick."
word1 = "quick"
word2 = "fox"

result = smallest_distance(text, word1, word2)
print(result)  # This will print: 1, since 'quick' and 'fox' are 1 word apart at their closest points
