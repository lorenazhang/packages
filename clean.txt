from docx import Document
import spacy

def chunk_document(doc_path):
    """
    Splits a Word document into sections based on headings.
    
    Parameters:
        doc_path (str): Path to the .docx file.
    
    Returns:
        list of dict: Each dictionary contains 'heading' and 'content'.
    """
    doc = Document(doc_path)
    nlp = spacy.load("en_core_web_sm")
    
    chunks = []
    current_heading = "Introduction"  # Default section for pre-heading content
    current_text = []

    for para in doc.paragraphs:
        if para.style.name.startswith("Heading"):  # Detect heading
            if current_text:
                chunks.append({
                    "heading": current_heading,
                    "content": " ".join(current_text)
                })
                current_text = []
            current_heading = para.text.strip()  # Update section name
        else:
            if para.text.strip():
                current_text.append(para.text.strip())

    # Append last section
    if current_text:
        chunks.append({
            "heading": current_heading,
            "content": " ".join(current_text)
        })
    
    return chunks

# Example Usage
if __name__ == "__main__":
    doc_path = "sample.docx"  # Replace with your file path
    chunks = chunk_document(doc_path)

    # Display the structured chunks
    for chunk in chunks:
        print(f"Section: {chunk['heading']}\nContent: {chunk['content'][:200]}...\n{'-'*50}")
